version: "3"

services:
  # Сервер с хранилищем файлов.
  s3:
    image: minio/minio:latest
    container_name: miniodocker3
    command: server /data
    ports:
      - "9000:9000"
    volumes:
      - media:/data
    environment:
      - MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY
    restart: on-failure

  # База
  mongo:
    image: bitnami/mongodb:latest
    container_name: mongo_docker_3
    restart: always

  # Postfix для отправки почты
  postfix:
    image: catatnight/postfix
    container_name: postfix_docker
    environment:
      - maildomain=${maildomain}
      - smtp_user=${smtp_user}

  # Наше приложение для отправки почты
  postfix_backend:
    container_name: postfix_backend_docker_3
    build:
      dockerfile: Dockerfile
      context: ./postfix_application
    depends_on:
      - postfix
    # links можно не писать
    links:
      - postfix
    environment:
      - SMTP_HOST
      - SMTP_PORT
      - SMTP_USER
      - SMTP_PASSWORD
      - EMAIL_SERVICE_PORT
    restart: "no"

  redis:
    image: redis:alpine
    container_name: redis_docker_3

  # Наше приложение.
  backend:
    container_name: backend_docker_3
    env_file: .env
    build:
      dockerfile: Dockerfile
      context: ./application
    depends_on:
      - s3
      - mongo
      - postfix_backend
      - redis
    # links можно не писать
    links:
      - s3
      - mongo
      - postfix_backend
      - redis
    restart: "no"

  # Воркер 1
  worker1:
    container_name: worker1_docker_3
    command: python -u worker.py
    env_file: .env
    build:
      dockerfile: Dockerfile
      context: ./application
    depends_on:
      - s3
      - mongo
      - postfix_backend
      - redis
    links:
      - s3
      - mongo
      - postfix_backend
      - redis
    environment:
      - REDIS_CHANNEL=worker1
    restart: "no"

  # Воркер 2
  worker2:
    container_name: worker2_docker_3
    command: python -u worker.py
    env_file: .env
    build:
      dockerfile: Dockerfile
      context: ./application
    depends_on:
      - s3
      - mongo
      - postfix_backend
      - redis
    links:
      - s3
      - mongo
      - postfix_backend
      - redis
    environment:
      - REDIS_CHANNEL=worker2
    restart: "no"

  # Веб сервер как морда
  nginx:
    container_name: nginx_docker_3
    build:
      context: ./nginx
      dockerfile: Dockerfile
    environment:
      - BACKEND_HOST
      - BACKEND_PORT
    depends_on:
      - backend
    ports:
      - "8000:80"
    restart: "no"

volumes:
  media:
    driver_opts:
      type: none
      # NOTE: обязательно писать полный путь. С ~ не работает
      device: /Users/amnisia/projects/docker_less/docker-compose/media
      o: bind
